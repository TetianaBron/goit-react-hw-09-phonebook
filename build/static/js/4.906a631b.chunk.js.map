{"version":3,"sources":["redux/phoneBook/phoneBook-selectors.js","components/Notification/Notification.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","redux/phoneBook/phoneBook-operations.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/IconButton/IconButton.js","icons/delete.svg","components/ContactList/ContactList.js","components/Logo/Logo.js","pages/PhoneBookPage.js"],"names":["getFilter","state","phoneBook","filter","getAllContacts","contacts","selectors","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","getError","error","Notification","message","dispatch","useDispatch","errorPb","useSelector","errorAuth","authSelectors","clearErrorPb","useCallback","phoneBookActions","clearErrorAuth","authActions","clearError","useEffect","setTimeout","in","timeout","classNames","unmountOnExit","className","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","operations","fetchContacts","fetchContactRequest","axios","get","then","data","fetchContactSuccess","catch","fetchContactError","addContact","number","contact","addContactRequest","post","addContactSuccess","addContactError","removeContact","contactId","removeContactRequest","delete","removeContactSuccess","removeContactError","ContactForm","useState","setName","setNumber","setMessage","saveMessage","note","handleChange","e","target","console","warn","onSubmit","preventDefault","find","item","autoComplete","htmlFor","type","id","onChange","placeholder","Filter","CSSTransition","IconButton","children","onClick","defaultProps","_extends","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","SvgDelete","_ref","svgRef","title","titleId","props","fill","xmlns","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","ref","ForwardRef","ContactList","TransitionGroup","component","map","onRemoveContact","aria-label","width","height","Logo","appear","PhoneBookPage","isLoadingContacts","Layout","Spinner","ommountOnExit"],"mappings":"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","file":"static/js/4.906a631b.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.phoneBook.loading;\r\n\r\nconst getFilter = state => state.phoneBook.filter;\r\n\r\nconst getAllContacts = state => state.phoneBook.contacts;\r\n\r\nconst getError = state => state.phoneBook.error;\r\n\r\n//Без мемоизации\r\n// const getVisibleContacts = state => {\r\n//     const contacts = getAllContacts(state);\r\n//     const filter = getFilter(state);\r\n//     const normalizedFilter = filter.toLowerCase();\r\n\r\n//     return contacts.filter(({ name }) =>\r\n//         name.toLowerCase().includes(normalizedFilter),\r\n//     );\r\n// };\r\n\r\n//С мемоизацией\r\nconst getVisibleContacts = createSelector(\r\n    [getAllContacts, getFilter],\r\n    (contacts, filter) => { \r\n         const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n        name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n    },\r\n);\r\n\r\nconst selectors = {\r\n    getLoading,\r\n    getFilter,\r\n    getVisibleContacts,\r\n    getAllContacts,\r\n    getError\r\n};\r\n\r\nexport default selectors;","import React, { useEffect, useCallback } from 'react';\r\nimport * as phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\r\nimport { useSelector, useDispatch  } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './Notification.scss';\r\nimport selectors from '../../redux/phoneBook/phoneBook-selectors';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport authActions from '../../redux/auth/auth-actions';\r\n\r\nexport default function Notification({message}) {\r\n    const dispatch = useDispatch();\r\n    const errorPb = useSelector(selectors.getError);\r\n    const errorAuth = useSelector(authSelectors.getError);\r\n    const clearErrorPb = useCallback(() => dispatch(phoneBookActions.clearError()), [dispatch]);\r\n    const clearErrorAuth = useCallback(() => dispatch(authActions.clearError()), [dispatch]);\r\n   \r\n     \r\n    useEffect(() => {\r\n            setTimeout(() => {\r\n                clearErrorAuth();\r\n            }, 2500);\r\n    }, [errorAuth, clearErrorAuth]);\r\n    \r\n\r\n     useEffect(() => {\r\n            setTimeout(() => {\r\n                clearErrorPb();\r\n            }, 2500);\r\n    }, [errorPb, clearErrorPb]);\r\n\r\n    // componentDidUpdate() {\r\n    //      if (errorAuth) {\r\n    //         setTimeout(() => {\r\n    //             clearErrorAuth(this.state);\r\n    //         }, 2500);\r\n    //          return;\r\n    //     }\r\n    //        if (errorPb) {\r\n    //         setTimeout(() => {\r\n    //             clearErrorPb(this.state);\r\n    //         }, 2500);\r\n    //          return;\r\n    //     }\r\n    // }\r\n    \r\n        return (\r\n            <CSSTransition\r\n            in={message}\r\n            timeout={250}\r\n            classNames=\"Notification-fade\"\r\n            unmountOnExit>\r\n            \r\n        <div className=\"Overlay\">\r\n        <p className=\"Notification\">\r\n            {message}\r\n        </p>\r\n        </div>\r\n        </CSSTransition>\r\n        );\r\n    };\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n    errorPb: PropTypes.string,\r\n    errorAuth: PropTypes.string,\r\n    clearErrorPb: PropTypes.func,\r\n    clearErrorPAuth: PropTypes.func\r\n};\r\n\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios';\r\nimport {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    removeContactRequest,\r\n    removeContactSuccess,\r\n    removeContactError\r\n} from './phoneBook-actions';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n    dispatch(fetchContactRequest());\r\n\r\n    axios\r\n        .get('/contacts')\r\n        .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n        .catch (error => dispatch(fetchContactError(error.message)));\r\n};\r\n\r\n// Option with async/await, try/catch\r\n\r\n// const fetchContacts = () => async dispatch => {\r\n//     dispatch(fetchContactRequest());\r\n\r\n//     try {\r\n//         const { data } = await axios.get('/contacts');\r\n\r\n//         dispatch(fetchContactSuccess(data));\r\n//     } catch (error) {\r\n//         dispatch(fetchContactSuccess(error));\r\n//     }\r\n// }\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n    const contact = {\r\n        name,\r\n        number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\nconst removeContact = (contactId) => dispatch => {\r\n    dispatch(removeContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${contactId}`)\r\n        .then(() => dispatch(removeContactSuccess(contactId)))\r\n        .catch(error => dispatch(removeContactError(error.message)));\r\n};\r\n\r\nconst operations = {\r\n    fetchContacts,\r\n    addContact,\r\n    removeContact\r\n};\r\n\r\nexport default operations;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport operations from '../../redux/phoneBook/phoneBook-operations'\nimport selectors from '../../redux/phoneBook/phoneBook-selectors';\nimport Notification from '../../components/Notification/Notification';\nimport PropTypes from 'prop-types';\nimport './ContactForm.scss';\n\nexport default function ContactForm() {\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const [message, setMessage] = useState(null);\n\n    const contacts = useSelector(selectors.getAllContacts);\n    const onSubmit = (name, number) => dispatch(operations.addContact(name, number));\n\n    const saveMessage = (note) => {\n        setMessage(note);\n        setTimeout(() => {\n            setMessage(null);\n        }, 2500);\n    }\n    \n    const handleChange = e => {\n        const { name, value } = e.target;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            \n            case 'number':\n                setNumber(value);\n                break;\n            \n            default:\n                console.warn(`Тип поля name - ${name} не обрабатывается!`);\n        }\n    };\n\n        const handleSubmit = e => {\n            e.preventDefault();\n\n            if (name === '') {\n                saveMessage('Enter contact name, please!');\n                return;\n            }\n            if (number === '') {\n                saveMessage('Enter concact phone, please!');\n                return;\n            }\n            if (contacts.find((item) => item.name.toLowerCase() === name.toLowerCase())) {\n                saveMessage('Contact already exists!');\n                return;\n            }\n\n            onSubmit(name, number);\n            setName('');\n            setNumber('');\n        };\n        \n        return (\n            <div>\n                <Notification\n                    message={message} />\n                <form\n                    className=\"Form\"\n                    onSubmit={handleSubmit}\n                    autoComplete=\"off\">\n                    <label\n                        htmlFor=\"name\"\n                        className=\"Label\">Name</label>\n                    <input\n                        type=\"text\"\n                        value={name}\n                        id=\"name\"\n                        className=\"Input\"\n                        onChange={handleChange}\n                        name=\"name\"\n                        placeholder=\"John Smith\"\n                    />\n            \n                    <label\n                        htmlFor=\"number\"\n                        className=\"Label\">Number</label>\n                    <input\n                        type=\"tel\"\n                        value={number}\n                        id=\"number\"\n                        className=\"Input\"\n                        onChange={handleChange}\n                        name=\"number\"\n                        placeholder=\"+38(067)777-77-77\"\n                    />\n                    \n                    <button\n                        type=\"submit\"\n                        className=\"Button\">\n                        Add contact\n                    </button>\n                </form>\n            </div>\n        );\n };\n\nContactForm.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    onSubmit: PropTypes.func,\n};","import { useSelector, useDispatch } from 'react-redux';\nimport * as phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\nimport './Filter.scss';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport selectors from '../../redux/phoneBook/phoneBook-selectors';\n\n\nexport default function Filter() {\n    const dispatch = useDispatch();\n    const value = useSelector(selectors.getFilter);\n    const contacts = useSelector(selectors.getAllContacts);\n    const onChange = e => dispatch(phoneBookActions.changeFilter(e.target.value));\n\n    return (\n    <CSSTransition\n        in={contacts.length > 1}\n        timeout={250}\n        classNames=\"Filter-fade\"\n        unmountOnExit>\n        \n        <div className=\"FindForm\">\n            <label\n                htmlFor=\"find\"\n                className=\"FindLabel\">\n            Find contact by name\n            </label>\n            <input\n                type=\"text\"\n                value={value}\n                id=\"find\"\n                className=\"FindInput\"\n                onChange={onChange}\n                />\n        </div>\n     </CSSTransition>\n    )\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './IconButton.scss';\r\n\r\nconst IconButton = ({ children, onClick, ...allProps}) => {\r\n    return (\r\n        <button type=\"button\" onClick={onClick} className=\"IconButton\">\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nIconButton.defaultProps = {\r\n    onClick: () => null,\r\n    children: null,\r\n};\r\n\r\nIconButton.propTypes = {\r\n    onClick: PropTypes.func,\r\n    children: PropTypes.node,\r\n    'aria-label': PropTypes.string.isRequired,\r\n}\r\n\r\nexport default IconButton;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M59.595,52.861L37.094,30.359L59.473,7.98c1.825-1.826,1.825-4.786,0-6.611 c-1.826-1.825-4.785-1.825-6.611,0L30.483,23.748L8.105,1.369c-1.826-1.825-4.785-1.825-6.611,0c-1.826,1.826-1.826,4.786,0,6.611 l22.378,22.379L1.369,52.861c-1.826,1.826-1.826,4.785,0,6.611c0.913,0.913,2.109,1.369,3.306,1.369s2.393-0.456,3.306-1.369 l22.502-22.502l22.501,22.502c0.913,0.913,2.109,1.369,3.306,1.369s2.393-0.456,3.306-1.369 C61.42,57.647,61.42,54.687,59.595,52.861z\"\n});\n\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"currentColor\",\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 60.963 60.842\",\n    style: {\n      enableBackground: \"new 0 0 60.963 60.842\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.6bebf326.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport operations from '../../redux/phoneBook/phoneBook-operations';\nimport selectors from '../../redux/phoneBook/phoneBook-selectors';\nimport './ContactList.scss';\nimport PropTypes from 'prop-types';\nimport IconButton from '../IconButton/IconButton';\nimport { ReactComponent as DeleteIcon } from '../../icons/delete.svg';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n\nexport default function ContactList() {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectors.getVisibleContacts);\n    const onRemoveContact = id => dispatch(operations.removeContact(id));\n\n    return (\n            <TransitionGroup component=\"ul\">\n                {contacts.map(({ id, name, number }, i) => (\n                    <CSSTransition\n                        key={id}\n                        timeout={250}\n                        classNames=\"ContactItem-fade\">\n                        <li className=\"ContactItem\">\n                        {i + 1}. {name}: {number}\n                        <IconButton\n                            onClick={() => onRemoveContact(id)}\n                            aria-label=\"Удалить контакт\">\n                            <DeleteIcon\n                                width=\"17\"\n                                height=\"17\"\n                                fill=\"#fff\" />\n                        </IconButton>\n                        </li>\n                    </CSSTransition>\n                ))}\n            </TransitionGroup>\n    );\n};\n\nContactList.propTypes = {\n  onRemoveContact: PropTypes.func,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst Logo = () => {\r\n    return (\r\n         <CSSTransition\r\n             in={true}\r\n             appear={true}\r\n             timeout={500}\r\n             classNames=\"Title-SlideIn\"\r\n             unmountOnExit\r\n             >\r\n             <h1 className=\"Title\">Phonebook</h1>\r\n         </CSSTransition>\r\n    );\r\n};\r\n\r\nexport default Logo;","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Layout from '../components/Layout/Layout';\r\nimport ContactForm from '../components/ContactForm/ContactForm';\r\nimport Filter from '../components/Filter/Filter';\r\nimport ContactList from '../components/ContactList/ContactList';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Logo from '../components/Logo/Logo';\r\nimport operations from '../redux/phoneBook/phoneBook-operations';\r\nimport Spinner from '../components/Spinner/Spinner';\r\nimport Notification from '../components/Notification/Notification';\r\nimport selectors from '../redux/phoneBook/phoneBook-selectors';\r\n\r\nexport default function PhoneBookPage() {\r\n    const contacts = useSelector(selectors.getAllContacts);\r\n    const isLoadingContacts = useSelector(selectors.getLoading);\r\n    const error = useSelector(selectors.getError);\r\n    const dispatch = useDispatch(); \r\n    \r\n    useEffect(() => {\r\n        dispatch(operations.fetchContacts());\r\n    }, [dispatch]);\r\n \r\n    return (\r\n        <Layout>\r\n            <Logo />\r\n\r\n            <Notification\r\n                message={error} />\r\n                \r\n            <ContactForm />\r\n                    \r\n            <Filter />\r\n\r\n            {isLoadingContacts && <Spinner />}\r\n                \r\n            <CSSTransition\r\n                in={contacts.length > 0}\r\n                timeout={0}\r\n                ommountOnExit>\r\n                <ContactList />\r\n            </CSSTransition>\r\n\r\n                \r\n                \r\n        </Layout>\r\n    );\r\n};\r\n\r\n PhoneBookPage.propTypes = {\r\n        contacts: PropTypes.arrayOf(PropTypes.object),\r\n        fetchContacts: PropTypes.func,\r\n        isLoadingContacts: PropTypes.bool,\r\n        error: PropTypes.string\r\n    };"],"sourceRoot":""}