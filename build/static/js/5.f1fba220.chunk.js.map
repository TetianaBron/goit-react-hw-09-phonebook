{"version":3,"sources":["redux/phoneBook/phoneBook-selectors.js","components/Notification/Notification.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/LoginPage.js"],"names":["getFilter","state","phoneBook","filter","getAllContacts","contacts","selectors","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","getError","error","Notification","message","dispatch","useDispatch","errorPb","useSelector","errorAuth","authSelectors","clearErrorPb","useCallback","phoneBookActions","clearErrorAuth","authActions","clearError","useEffect","setTimeout","in","timeout","classNames","unmountOnExit","className","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","LoginPage","useState","email","setEmail","password","setPassword","isLoadingAuth","handleChange","target","console","warn","appear","onSubmit","e","preventDefault","authOperations","logIn","autoComplete","htmlFor","type","onChange"],"mappings":"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","file":"static/js/5.f1fba220.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.phoneBook.loading;\r\n\r\nconst getFilter = state => state.phoneBook.filter;\r\n\r\nconst getAllContacts = state => state.phoneBook.contacts;\r\n\r\nconst getError = state => state.phoneBook.error;\r\n\r\n//Без мемоизации\r\n// const getVisibleContacts = state => {\r\n//     const contacts = getAllContacts(state);\r\n//     const filter = getFilter(state);\r\n//     const normalizedFilter = filter.toLowerCase();\r\n\r\n//     return contacts.filter(({ name }) =>\r\n//         name.toLowerCase().includes(normalizedFilter),\r\n//     );\r\n// };\r\n\r\n//С мемоизацией\r\nconst getVisibleContacts = createSelector(\r\n    [getAllContacts, getFilter],\r\n    (contacts, filter) => { \r\n         const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n        name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n    },\r\n);\r\n\r\nconst selectors = {\r\n    getLoading,\r\n    getFilter,\r\n    getVisibleContacts,\r\n    getAllContacts,\r\n    getError\r\n};\r\n\r\nexport default selectors;","import React, { useEffect, useCallback } from 'react';\r\nimport * as phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\r\nimport { useSelector, useDispatch  } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './Notification.scss';\r\nimport selectors from '../../redux/phoneBook/phoneBook-selectors';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport authActions from '../../redux/auth/auth-actions';\r\n\r\nexport default function Notification({message}) {\r\n    const dispatch = useDispatch();\r\n    const errorPb = useSelector(selectors.getError);\r\n    const errorAuth = useSelector(authSelectors.getError);\r\n    const clearErrorPb = useCallback(() => dispatch(phoneBookActions.clearError()), [dispatch]);\r\n    const clearErrorAuth = useCallback(() => dispatch(authActions.clearError()), [dispatch]);\r\n   \r\n     \r\n    useEffect(() => {\r\n            setTimeout(() => {\r\n                clearErrorAuth();\r\n            }, 2500);\r\n    }, [errorAuth, clearErrorAuth]);\r\n    \r\n\r\n     useEffect(() => {\r\n            setTimeout(() => {\r\n                clearErrorPb();\r\n            }, 2500);\r\n    }, [errorPb, clearErrorPb]);\r\n\r\n    // componentDidUpdate() {\r\n    //      if (errorAuth) {\r\n    //         setTimeout(() => {\r\n    //             clearErrorAuth(this.state);\r\n    //         }, 2500);\r\n    //          return;\r\n    //     }\r\n    //        if (errorPb) {\r\n    //         setTimeout(() => {\r\n    //             clearErrorPb(this.state);\r\n    //         }, 2500);\r\n    //          return;\r\n    //     }\r\n    // }\r\n    \r\n        return (\r\n            <CSSTransition\r\n            in={message}\r\n            timeout={250}\r\n            classNames=\"Notification-fade\"\r\n            unmountOnExit>\r\n            \r\n        <div className=\"Overlay\">\r\n        <p className=\"Notification\">\r\n            {message}\r\n        </p>\r\n        </div>\r\n        </CSSTransition>\r\n        );\r\n    };\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n    errorPb: PropTypes.string,\r\n    errorAuth: PropTypes.string,\r\n    clearErrorPb: PropTypes.func,\r\n    clearErrorPAuth: PropTypes.func\r\n};\r\n\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport authOperations from '../redux/auth/auth-operations.js';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\nimport Notification from '../components/Notification/Notification';\r\nimport Spinner from '../components/Spinner/Spinner';\r\n\r\nexport default function LoginPage() {\r\n  const dispatch = useDispatch();\r\n  \r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const error = useSelector(authSelectors.getError);\r\n  const isLoadingAuth = useSelector(authSelectors.getLoading);\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n   switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:  console.warn(`Тип поля name - ${name} не обрабатывается!`);\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(authOperations.logIn({ email, password }));\r\n    setEmail('');\r\n    setPassword('');    \r\n    };\r\n\r\n    return (\r\n      <div>\r\n         <CSSTransition\r\n             in={true}\r\n             appear={true}\r\n             timeout={500}\r\n             classNames=\"Title-SlideIn\"\r\n             unmountOnExit\r\n             >\r\n             <h1 className=\"Title\">Enter your data</h1>\r\n         </CSSTransition>\r\n\r\n        \r\n        <Notification\r\n            message={error}\r\n          />\r\n        \r\n        {isLoadingAuth && <Spinner />}\r\n        \r\n        <form\r\n          className=\"Form\"\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\">\r\n          <label\r\n            htmlFor=\"email\"\r\n            className=\"Label\">\r\n            Email </label>\r\n            <input\r\n              className=\"Input\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={handleChange}\r\n            />\r\n         \r\n\r\n          <label\r\n            htmlFor=\"password\"\r\n            className=\"Label\">\r\n            Password</label>\r\n            <input\r\n              className=\"Input\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n            />\r\n          \r\n\r\n          <button\r\n            className=\"Button\"\r\n            type=\"submit\">Login</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\nLoginPage.propTypes = {\r\n    error: PropTypes.string,\r\n    isLoadingAuth: PropTypes.bool,\r\n  };\r\n\r\n"],"sourceRoot":""}