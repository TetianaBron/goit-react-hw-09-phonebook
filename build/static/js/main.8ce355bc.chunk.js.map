{"version":3,"sources":["redux/phoneBook/phoneBook-actions.js","components/Navigation.js","images/default-avatar.png","components/button.js","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/phoneBook/phoneBook-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js","redux/auth/auth-selectors.js","components/Spinner/Spinner.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js","components/Layout/Layout.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","clearError","connect","state","isAuthenticated","authSelectors","getIsAuthenticated","className","to","exact","activeClassName","useStyles","makeStyles","root","background","border","borderRadius","boxShadow","color","height","padding","ButtonMenu","onClick","classes","Button","mapDispatchToProps","onLogout","authOperations","logOut","name","getUsername","avatar","defaultAvatar","src","alt","width","AuthNav","styles","header","display","justifyContent","alignItems","borderBottom","style","token","getToken","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","RegisterPage","LoginPage","PhoneBookPage","App","this","onGetCurrentUser","Layout","fallback","Spinner","path","getCurrentUser","initialState","contacts","createReducer","_","payload","filter","id","loading","setError","error","combineReducers","initialUserState","email","user","authActions","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","registerError","loginError","logoutError","getCurrentUserError","registerRequest","loginRequest","logoutRequest","getCurrentUserRequest","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","phoneBook","phoneBookReducer","devTools","process","persistor","persistStore","ReactDOM","document","querySelector","getError","getLoading","type","timeout","axios","defaults","baseURL","headers","common","Authorization","register","credential","dispatch","a","post","response","data","message","logIn","getState","persistedToken","get","children"],"mappings":"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","file":"static/js/main.8ce355bc.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const removeContactRequest = createAction('contacts/removeContactRequest');\r\nexport const removeContactSuccess = createAction('contacts/removeContactSuccess');\r\nexport const removeContactError = createAction('contacts/removeContactError');\r\n\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport const clearError = createAction('contacts/clearError');\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\nconst Navigation = ({isAuthenticated}) => (\r\n  <nav className=\"nav\">\r\n    {!isAuthenticated &&\r\n     ( <NavLink\r\n        to=\"/\"\r\n        exact\r\n        className=\"NavLink\"\r\n        activeClassName=\"NavLink--active\"\r\n      >\r\n      Home\r\n    </NavLink>\r\n    )}\r\n\r\n    {isAuthenticated && \r\n    (<NavLink\r\n      to=\"/contacts\"\r\n      exact\r\n      className=\"NavLink\"\r\n      activeClassName=\"NavLink--active\"\r\n    >\r\n      Phonebook\r\n    </NavLink>\r\n      )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect (mapStateToProps)(Navigation);","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #f44336 30%, #f44336 90%)',\r\n    border: 0,\r\n    borderRadius: 3,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    height: 36,\r\n    padding: '0 20px',\r\n  },\r\n});\r\n\r\nexport default function ButtonMenu({onClick}) {\r\n  const classes = useStyles();\r\n  return <Button onClick={onClick} className={classes.root}>Logout</Button>;\r\n}","import React from 'react';\r\nimport './UserMenu.scss';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport defaultAvatar from '../../images/default-avatar.png';\r\nimport ButtonMenu from '../../components/button';\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div className=\"MenuContainer\">\r\n    <img src={avatar} alt=\"\" width=\"32\" className=\"MenuAvatar\" />\r\n    <span className=\"MenuName\">Welcome, {name}</span>\r\n{/* My button\r\n    <button className=\"MenuButton\" type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button> */}\r\n\r\n    {/* Button from Material UI */}\r\n    <ButtonMenu onClick={onLogout} />\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUsername(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      className=\"NavLink\"\r\n      activeClassName=\"NavLink--active\"\r\n    >\r\n      Sign up\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      className=\"NavLink\"\r\n      activeClassName=\"NavLink--active\"\r\n    >\r\n      Log in\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu/UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header style={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  token,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n     token ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  token: authSelectors.getToken(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /contacts\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  token,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route \r\n    {...routeProps}\r\n    render={props =>\r\n      token && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  token: authSelectors.getToken(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AppBar from './components/AppBar';\nimport Layout from './components/Layout/Layout';\nimport authOperations from './redux/auth/auth-operations';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport Spinner from './components/Spinner/Spinner';\n\nconst HomePage = lazy(() => import('./pages/HomePage'));\nconst RegisterPage = lazy(() => import('./pages/RegisterPage'));\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\nconst PhoneBookPage = lazy(() => import('./pages/PhoneBookPage'));\n\nclass App extends Component {\n      static propTypes = {\n        onGetCurrentUser: PropTypes.func,\n      };\n    \n    componentDidMount() {\n        this.props.onGetCurrentUser();\n    }\n    render() {\n        return (\n            <Layout>\n                <AppBar />\n\n                <Suspense fallback={<Spinner/>}>\n                    <Switch>\n                    <PublicRoute\n                        exact\n                        path=\"/\"\n                        restricted\n                        redirectTo=\"/contacts\"\n                        component={HomePage} />\n                    <PublicRoute\n                        path=\"/register\"\n                        restricted\n                        redirectTo=\"/contacts\"\n                        component={RegisterPage} />\n                    <PublicRoute\n                        path=\"/login\"\n                        restricted\n                        redirectTo=\"/contacts\"\n                        component={LoginPage} />\n                    <PrivateRoute\n                        path=\"/contacts\"\n                        redirectTo=\"/login\"\n                        component={PhoneBookPage}\n                    />\n                    </Switch>\n                 </Suspense>\n            </Layout>\n        );\n    };\n};\n\nconst mapDispatchToProps = {\n    onGetCurrentUser: authOperations.getCurrentUser\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n\n\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    removeContactRequest,\r\n    removeContactSuccess,\r\n    removeContactError,\r\n    changeFilter,\r\n    clearError\r\n} from './phoneBook-actions'; \r\n\r\nconst initialState = {\r\n        contacts: [],\r\n        filter: '',\r\n        loading: false,\r\n        error: null,\r\n};\r\n\r\nconst contacts = createReducer(initialState.contacts, {\r\n    [fetchContactSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [removeContactSuccess]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(initialState.loading, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [removeContactRequest]: () => true,\r\n    [removeContactSuccess]: () => false,\r\n    [removeContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(initialState.filter, {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(initialState.error, {\r\n    [fetchContactError]: setError,\r\n    [addContactError]: setError,\r\n    [removeContactError]: setError,\r\n    [clearError]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter,\r\n    loading,\r\n    error\r\n});","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = {\r\n    name: null,\r\n    email: null\r\n};\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.logoutSuccess]: () => initialUserState,\r\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.logoutSuccess]: () => null\r\n});\r\n\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: setError,\r\n    [authActions.loginError]: setError,\r\n    [authActions.logoutError]: setError,\r\n    [authActions.getCurrentUserError]: setError,\r\n    [authActions.clearError]: () => null,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n    [authActions.registerSuccess]: () => true,\r\n    [authActions.loginSuccess]:() => true,\r\n    [authActions.getCurrentUserSuccess]: () => true,\r\n    [authActions.registerError]: () => false,\r\n    [authActions.loginError]: () => false,\r\n    [authActions.getCurrentUserError]: () => false,\r\n    [authActions.logoutSuccess]: () => false\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [authActions.registerSuccess]: () => false,\r\n    [authActions.registerRequest]: () => true,\r\n    [authActions.registerError]: () => false,\r\n    [authActions.loginSuccess]: () => false,\r\n    [authActions.loginRequest]: () => true,\r\n    [authActions.loginError]: () => false,\r\n    [authActions.logoutRequest]: () => true,\r\n    [authActions.logoutSuccess]: () => false,\r\n    [authActions.logoutError]: () => false,\r\n    [authActions.getCurrentUserRequest]: () => true,\r\n    [authActions.getCurrentUserSuccess]: () => false,\r\n    [authActions.getCurrentUserError]: () => false,\r\n    [authActions.clearError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n    user,\r\n    isAuthenticated,\r\n    token,\r\n    loading,\r\n    error\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'; \r\n//import logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\r\nimport authReducer from './auth/auth-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n // logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token']\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    phoneBook: phoneBookReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport Spinner from './components/Spinner/Spinner';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\n\nReactDOM.render(\n    <Provider store={store.store}>\n        <PersistGate\n            loading={<Spinner/>}\n            persistor={store.persistor}>\n             <BrowserRouter>\n                <App />\n            </BrowserRouter>\n    </PersistGate>\n    </Provider>,\n    document.querySelector('#root'),\n);\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst getError = state => state.auth.error;\r\n\r\nconst getToken = state => state.auth.token;\r\n\r\nconst getLoading = state => state.auth.loading;\r\n\r\n const authSelectors = {\r\n     getIsAuthenticated,\r\n     getUsername,\r\n     getError,\r\n     getToken,\r\n     getLoading\r\n};\r\n\r\nexport default authSelectors;","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"Loader\">\r\n             <Loader\r\n                 type=\"TailSpin\"\r\n                 color=\"#3f51b5\"\r\n                 height={100}\r\n                 width={100}\r\n                timeout={300} \r\n                />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credential => async dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n\r\n    try {\r\n      const response = await axios.post('/users/signup', credential);\r\n      \r\n      token.set(response.data.token);\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(authActions.registerError(error.message));\r\n    }  \r\n};\r\n\r\nconst logIn = credential => async dispatch => {\r\n     dispatch(authActions.registerRequest());\r\n\r\n    try {\r\n      const response = await axios.post('/users/login', credential);\r\n      \r\n      token.set(response.data.token);\r\n      dispatch(authActions.loginSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(authActions.loginError(error.message));\r\n    }  \r\n };\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n    try {\r\n      await axios.post('/users/logout');\r\n\r\n    \r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    } catch (error) {\r\n      dispatch(authActions.logoutError(error.message));\r\n    }  \r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const { auth: { token: persistedToken }, } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n    //На случай если в локал сторедж остался какой-то токен чтобы его почистить\r\n    dispatch(authActions.logoutSuccess());\r\n  }\r\n};\r\n\r\nconst authOperations = {\r\n    register,\r\n    logIn,\r\n    logOut,\r\n    getCurrentUser\r\n};\r\n\r\nexport default authOperations;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nconst clearError = createAction('auth/clearError');\r\n\r\nconst authActions = {\r\n    registerSuccess,\r\n    registerRequest,\r\n    registerError,\r\n    loginSuccess,\r\n    loginRequest,\r\n    loginError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError,\r\n    clearError\r\n};\r\n\r\nexport default authActions;","import React from 'react';\nimport './Layout.scss';\n\nconst Layout = ({ children }) =>\n    <div className=\"Layout\">{children}</div>;\n\nexport default Layout;"],"sourceRoot":""}