{"version":3,"sources":["components/Navigation.js","images/default-avatar.png","components/button.js","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/phoneBook/phoneBook-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js","redux/phoneBook/phoneBook-actions.js","redux/auth/auth-selectors.js","components/Spinner/Spinner.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js","components/Layout/Layout.js"],"names":["Navigation","isLoggedIn","useSelector","authSelectors","getIsAuthenticated","className","to","exact","activeClassName","useStyles","makeStyles","root","background","border","borderRadius","boxShadow","color","height","padding","ButtonMenu","onClick","classes","Button","UserMenu","dispatch","useDispatch","name","getUsername","onLogOut","useCallback","authOperations","logOut","src","defaultAvatar","alt","width","AuthNav","styles","header","display","justifyContent","alignItems","borderBottom","AppBar","style","PrivateRoute","redirectTo","children","routeProps","token","getToken","PublicRoute","restricted","HomePage","lazy","RegisterPage","LoginPage","PhoneBookPage","App","useEffect","getCurrentUser","Layout","fallback","Spinner","path","initialState","contacts","createReducer","fetchContactSuccess","_","payload","addContactSuccess","state","removeContactSuccess","filter","id","loading","fetchContactRequest","fetchContactError","addContactRequest","addContactError","removeContactRequest","removeContactError","changeFilter","setError","error","clearError","combineReducers","initialUserState","email","user","authActions","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","registerError","loginError","logoutError","getCurrentUserError","isAuthenticated","registerRequest","loginRequest","logoutRequest","getCurrentUserRequest","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","phoneBook","phoneBookReducer","devTools","process","persistor","persistStore","ReactDOM","render","document","querySelector","createAction","getError","getLoading","type","timeout","axios","defaults","baseURL","headers","common","Authorization","register","credential","a","post","response","data","message","logIn","getState","persistedToken","get"],"mappings":"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","file":"static/js/main.e80e2ef5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n      <nav className=\"nav\">\r\n         {isLoggedIn ? (\r\n         <NavLink\r\n           to=\"/contacts\"\r\n           exact\r\n           className=\"NavLink\"\r\n           activeClassName=\"NavLink--active\"\r\n          >\r\n               Phonebook\r\n         </NavLink>\r\n         ) : (\r\n         <NavLink\r\n           to=\"/\"\r\n           exact\r\n           className=\"NavLink\"\r\n           activeClassName=\"NavLink--active\"\r\n         >\r\n               Home\r\n        </NavLink>\r\n         )}\r\n      </nav>\r\n  );\r\n};","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #f44336 30%, #f44336 90%)',\r\n    border: 0,\r\n    borderRadius: 3,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    height: 36,\r\n    padding: '0 20px',\r\n  },\r\n});\r\n\r\nexport default function ButtonMenu({onClick}) {\r\n  const classes = useStyles();\r\n  return <Button onClick={onClick} className={classes.root}>Logout</Button>;\r\n}","import React, { useCallback } from 'react';\r\nimport './UserMenu.scss';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport defaultAvatar from '../../images/default-avatar.png';\r\nimport ButtonMenu from '../../components/button';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUsername);\r\n\r\n  const onLogOut = useCallback(() => {\r\n    dispatch(authOperations.logOut());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n  <div className=\"MenuContainer\">\r\n    <img src={defaultAvatar} alt=\"\" width=\"32\" className=\"MenuAvatar\" />\r\n    <span className=\"MenuName\">Welcome, {name}</span>\r\n{/* My button\r\n    <button className=\"MenuButton\" type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button> */}\r\n\r\n    {/* Button from Material UI */}\r\n    <ButtonMenu onClick={onLogOut} />\r\n  </div>\r\n  );\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//   name: authSelectors.getUsername(state),\r\n//   avatar: defaultAvatar,\r\n// });\r\n\r\n// const mapDispatchToProps = {\r\n//   onLogout: authOperations.logOut,\r\n// };\r\n\r\n//  connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      className=\"NavLink\"\r\n      activeClassName=\"NavLink--active\"\r\n    >\r\n      Sign up\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      className=\"NavLink\"\r\n      activeClassName=\"NavLink--active\"\r\n    >\r\n      Log in\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu/UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <header style={styles.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  ); \r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nexport default function PrivateRoute({\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const token = useSelector(authSelectors.getToken);\r\n  \r\n  return (\r\n\r\n    <Route {...routeProps}>\r\n      {token ? (children) : (<Redirect to={redirectTo} />)}\r\n    </Route>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /contacts\r\n * - В противном случае рендерит компонент\r\n */\r\nexport default function PublicRoute ({\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const token = useSelector(authSelectors.getToken);\r\n\r\n  return (\r\n\r\n    <Route {...routeProps}>\r\n      {token && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n          children\r\n      )}\r\n     </Route>\r\n  );\r\n};\r\n \r\n\r\n","import React, { useEffect, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport AppBar from './components/AppBar';\nimport Layout from './components/Layout/Layout';\nimport authOperations from './redux/auth/auth-operations';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport Spinner from './components/Spinner/Spinner';\n\nconst HomePage = lazy(() => import('./pages/HomePage'));\nconst RegisterPage = lazy(() => import('./pages/RegisterPage'));\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\nconst PhoneBookPage = lazy(() => import('./pages/PhoneBookPage'));\n\n\nexport default function App() {\n     \n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(authOperations.getCurrentUser());\n    }, [dispatch]);\n    \n        return (\n            <Layout>\n                <AppBar />\n\n                <Suspense fallback={<Spinner/>}>\n                    <Switch>\n                    <PublicRoute\n                        exact\n                        path=\"/\"\n                        restricted\n                        redirectTo=\"/contacts\">\n                        <HomePage/>\n                    </PublicRoute>\n                    <PublicRoute\n                        path=\"/register\"\n                        restricted\n                        redirectTo=\"/contacts\">\n                        <RegisterPage/>\n                    </PublicRoute>\n                    <PublicRoute\n                        path=\"/login\"\n                        restricted\n                        redirectTo=\"/contacts\">\n                        <LoginPage/> \n                    </PublicRoute>\n                    <PrivateRoute\n                        path=\"/contacts\"\n                        redirectTo=\"/login\">\n                        <PhoneBookPage/>\n                    </PrivateRoute>\n                    </Switch>\n                 </Suspense>\n            </Layout>\n        );\n    };\n\nApp.propTypes = {\n    onGetCurrentUser: PropTypes.func,\n};\n\n\n\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    removeContactRequest,\r\n    removeContactSuccess,\r\n    removeContactError,\r\n    changeFilter,\r\n    clearError\r\n} from './phoneBook-actions'; \r\n\r\nconst initialState = {\r\n        contacts: [],\r\n        filter: '',\r\n        loading: false,\r\n        error: null,\r\n};\r\n\r\nconst contacts = createReducer(initialState.contacts, {\r\n    [fetchContactSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [removeContactSuccess]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(initialState.loading, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [removeContactRequest]: () => true,\r\n    [removeContactSuccess]: () => false,\r\n    [removeContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(initialState.filter, {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(initialState.error, {\r\n    [fetchContactError]: setError,\r\n    [addContactError]: setError,\r\n    [removeContactError]: setError,\r\n    [clearError]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter,\r\n    loading,\r\n    error\r\n});","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = {\r\n    name: null,\r\n    email: null\r\n};\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.logoutSuccess]: () => initialUserState,\r\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.logoutSuccess]: () => null\r\n});\r\n\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: setError,\r\n    [authActions.loginError]: setError,\r\n    [authActions.logoutError]: setError,\r\n    [authActions.getCurrentUserError]: setError,\r\n    [authActions.clearError]: () => null,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n    [authActions.registerSuccess]: () => true,\r\n    [authActions.loginSuccess]:() => true,\r\n    [authActions.getCurrentUserSuccess]: () => true,\r\n    [authActions.registerError]: () => false,\r\n    [authActions.loginError]: () => false,\r\n    [authActions.getCurrentUserError]: () => false,\r\n    [authActions.logoutSuccess]: () => false\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [authActions.registerSuccess]: () => false,\r\n    [authActions.registerRequest]: () => true,\r\n    [authActions.registerError]: () => false,\r\n    [authActions.loginSuccess]: () => false,\r\n    [authActions.loginRequest]: () => true,\r\n    [authActions.loginError]: () => false,\r\n    [authActions.logoutRequest]: () => true,\r\n    [authActions.logoutSuccess]: () => false,\r\n    [authActions.logoutError]: () => false,\r\n    [authActions.getCurrentUserRequest]: () => true,\r\n    [authActions.getCurrentUserSuccess]: () => false,\r\n    [authActions.getCurrentUserError]: () => false,\r\n    [authActions.clearError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n    user,\r\n    isAuthenticated,\r\n    token,\r\n    loading,\r\n    error\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'; \r\n//import logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\r\nimport authReducer from './auth/auth-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n // logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token']\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    phoneBook: phoneBookReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport Spinner from './components/Spinner/Spinner';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\n\nReactDOM.render(\n    <Provider store={store.store}>\n        <PersistGate\n            loading={<Spinner/>}\n            persistor={store.persistor}>\n             <BrowserRouter>\n                <App />\n            </BrowserRouter>\n    </PersistGate>\n    </Provider>,\n    document.querySelector('#root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const removeContactRequest = createAction('contacts/removeContactRequest');\r\nexport const removeContactSuccess = createAction('contacts/removeContactSuccess');\r\nexport const removeContactError = createAction('contacts/removeContactError');\r\n\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport const clearError = createAction('contacts/clearError');\r\n\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst getError = state => state.auth.error;\r\n\r\nconst getToken = state => state.auth.token;\r\n\r\nconst getLoading = state => state.auth.loading;\r\n\r\n const authSelectors = {\r\n     getIsAuthenticated,\r\n     getUsername,\r\n     getError,\r\n     getToken,\r\n     getLoading\r\n};\r\n\r\nexport default authSelectors;","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"Loader\">\r\n             <Loader\r\n                 type=\"TailSpin\"\r\n                 color=\"#3f51b5\"\r\n                 height={100}\r\n                 width={100}\r\n                timeout={300} \r\n                />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credential => async dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n\r\n    try {\r\n      const response = await axios.post('/users/signup', credential);\r\n      \r\n      token.set(response.data.token);\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(authActions.registerError(error.message));\r\n    }  \r\n};\r\n\r\nconst logIn = credential => async dispatch => {\r\n     dispatch(authActions.registerRequest());\r\n\r\n    try {\r\n      const response = await axios.post('/users/login', credential);\r\n      \r\n      token.set(response.data.token);\r\n      dispatch(authActions.loginSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(authActions.loginError(error.message));\r\n    }  \r\n };\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n    try {\r\n      await axios.post('/users/logout');\r\n\r\n    \r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    } catch (error) {\r\n      dispatch(authActions.logoutError(error.message));\r\n    }  \r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const { auth: { token: persistedToken }, } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n    //На случай если в локал сторедж остался какой-то токен чтобы его почистить\r\n    dispatch(authActions.logoutSuccess());\r\n  }\r\n};\r\n\r\nconst authOperations = {\r\n    register,\r\n    logIn,\r\n    logOut,\r\n    getCurrentUser\r\n};\r\n\r\nexport default authOperations;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nconst clearError = createAction('auth/clearError');\r\n\r\nconst authActions = {\r\n    registerSuccess,\r\n    registerRequest,\r\n    registerError,\r\n    loginSuccess,\r\n    loginRequest,\r\n    loginError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError,\r\n    clearError\r\n};\r\n\r\nexport default authActions;","import React from 'react';\nimport './Layout.scss';\n\nconst Layout = ({ children }) =>\n    <div className=\"Layout\">{children}</div>;\n\nexport default Layout;"],"sourceRoot":""}